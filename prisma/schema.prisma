generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  ORGANIZER @map("organizer")
  ADMIN     @map("admin")
}

model Organizer {
  id           String @id @default(uuid())
  email        String @unique
  passwordHash String
  role         Role   @default(ORGANIZER)

  // 1:1 (each organizer can own at most one association)
  association Association?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("ORGANIZER")
}

enum SocialPlatform {
  twitter
  facebook
  instagram
  youtube
  tiktok
  bluesky
  mastodon
  threads
  linkedin
  other
}

model Association {
  id          String    @id @default(cuid())
  organizerId String    @unique
  organizer   Organizer @relation(fields: [organizerId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  name         String   @unique
  slug         String   @unique
  summary      String   @default("")
  color        String   @default("#ffffff")
  description  String   @default("")
  logoUrl      String?
  contactEmail String?
  phone        String?
  website      String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  socials SocialLink[]

  @@map("ASSOCIATION")
}

model SocialLink {
  id String @id @default(cuid())

  // relation to Association
  associationId String
  association   Association @relation(fields: [associationId], references: [id], onDelete: Cascade)

  platform SocialPlatform
  url      String         @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Enforce one link per platform per association
  @@unique([associationId, platform])
  // Helpful indexes
  @@index([associationId])
  @@index([platform])
}
